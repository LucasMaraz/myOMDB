{"ast":null,"code":"import { createAction, createReducer, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nexport const setUser = createAction(\"SET_USER\");\nexport const checkLogin = createAsyncThunk(\"USER\", () => {\n  return axios.get(\"/auth/me\").then(info => info.data).catch(() => console.log(\"Sin iniciar sesion\"));\n});\nexport const loginRequest = createAsyncThunk(\"LOGIN\", ({\n  email,\n  password,\n  errorAlert\n}) => {\n  return axios.post(\"/auth/login\", {\n    email,\n    password\n  }).then(res => res.data).catch(() => errorAlert());\n});\nexport const logoutRequest = createAsyncThunk(\"LOGOUT\", () => {\n  return axios.get(\"/auth/logout\").then(res => res.data);\n});\nconst userReducer = createReducer({}, {\n  [setUser]: (state, action) => state = action.payload,\n  [loginRequest.fulfilled]: (state, action) => state = action.payload,\n  [logoutRequest.fulfilled]: (state, action) => action.payload,\n  [loginRequest.pending]: (state, action) => ({\n    id: \"pending\"\n  }),\n  [checkLogin.fulfilled]: (state, action) => action.payload,\n  [checkLogin.pending]: (state, action) => ({\n    id: \"pending\"\n  })\n});\nexport default userReducer;","map":{"version":3,"sources":["/home/lucas/Escritorio/P5/03Bootcamp/OMDB/src/store/user.js"],"names":["createAction","createReducer","createAsyncThunk","axios","setUser","checkLogin","get","then","info","data","catch","console","log","loginRequest","email","password","errorAlert","post","res","logoutRequest","userReducer","state","action","payload","fulfilled","pending","id"],"mappings":"AAAA,SACEA,YADF,EAEEC,aAFF,EAGEC,gBAHF,QAIO,kBAJP;AAKA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,OAAO,GAAGJ,YAAY,CAAC,UAAD,CAA5B;AAEP,OAAO,MAAMK,UAAU,GAAGH,gBAAgB,CAAC,MAAD,EAAS,MAAM;AACvD,SAAOC,KAAK,CACTG,GADI,CACA,UADA,EAEJC,IAFI,CAEEC,IAAD,IAAUA,IAAI,CAACC,IAFhB,EAGJC,KAHI,CAGE,MAAMC,OAAO,CAACC,GAAR,CAAY,oBAAZ,CAHR,CAAP;AAID,CALyC,CAAnC;AAOP,OAAO,MAAMC,YAAY,GAAGX,gBAAgB,CAC1C,OAD0C,EAE1C,CAAC;AAAEY,EAAAA,KAAF;AAASC,EAAAA,QAAT;AAAmBC,EAAAA;AAAnB,CAAD,KAAqC;AACnC,SAAOb,KAAK,CACTc,IADI,CACC,aADD,EACgB;AAAEH,IAAAA,KAAF;AAASC,IAAAA;AAAT,GADhB,EAEJR,IAFI,CAEEW,GAAD,IAASA,GAAG,CAACT,IAFd,EAGJC,KAHI,CAGE,MAAMM,UAAU,EAHlB,CAAP;AAID,CAPyC,CAArC;AAUP,OAAO,MAAMG,aAAa,GAAGjB,gBAAgB,CAAC,QAAD,EAAW,MAAM;AAC5D,SAAOC,KAAK,CAACG,GAAN,CAAU,cAAV,EAA0BC,IAA1B,CAAgCW,GAAD,IAASA,GAAG,CAACT,IAA5C,CAAP;AACD,CAF4C,CAAtC;AAIP,MAAMW,WAAW,GAAGnB,aAAa,CAC/B,EAD+B,EAE/B;AACE,GAACG,OAAD,GAAW,CAACiB,KAAD,EAAQC,MAAR,KAAoBD,KAAK,GAAGC,MAAM,CAACC,OADhD;AAEE,GAACV,YAAY,CAACW,SAAd,GAA0B,CAACH,KAAD,EAAQC,MAAR,KAAoBD,KAAK,GAAGC,MAAM,CAACC,OAF/D;AAGE,GAACJ,aAAa,CAACK,SAAf,GAA2B,CAACH,KAAD,EAAQC,MAAR,KAAmBA,MAAM,CAACC,OAHvD;AAIE,GAACV,YAAY,CAACY,OAAd,GAAwB,CAACJ,KAAD,EAAQC,MAAR,MAAoB;AAAEI,IAAAA,EAAE,EAAE;AAAN,GAApB,CAJ1B;AAKE,GAACrB,UAAU,CAACmB,SAAZ,GAAwB,CAACH,KAAD,EAAQC,MAAR,KAAmBA,MAAM,CAACC,OALpD;AAME,GAAClB,UAAU,CAACoB,OAAZ,GAAsB,CAACJ,KAAD,EAAQC,MAAR,MAAoB;AAAEI,IAAAA,EAAE,EAAE;AAAN,GAApB;AANxB,CAF+B,CAAjC;AAYA,eAAeN,WAAf","sourcesContent":["import {\n  createAction,\n  createReducer,\n  createAsyncThunk,\n} from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\n\nexport const setUser = createAction(\"SET_USER\");\n\nexport const checkLogin = createAsyncThunk(\"USER\", () => {\n  return axios\n    .get(\"/auth/me\")\n    .then((info) => info.data)\n    .catch(() => console.log(\"Sin iniciar sesion\"));\n});\n\nexport const loginRequest = createAsyncThunk(\n  \"LOGIN\",\n  ({ email, password, errorAlert }) => {\n    return axios\n      .post(\"/auth/login\", { email, password })\n      .then((res) => res.data)\n      .catch(() => errorAlert());\n  }\n);\n\nexport const logoutRequest = createAsyncThunk(\"LOGOUT\", () => {\n  return axios.get(\"/auth/logout\").then((res) => res.data);\n});\n\nconst userReducer = createReducer(\n  {},\n  {\n    [setUser]: (state, action) => (state = action.payload),\n    [loginRequest.fulfilled]: (state, action) => (state = action.payload),\n    [logoutRequest.fulfilled]: (state, action) => action.payload,\n    [loginRequest.pending]: (state, action) => ({ id: \"pending\" }),\n    [checkLogin.fulfilled]: (state, action) => action.payload,\n    [checkLogin.pending]: (state, action) => ({ id: \"pending\" }),\n  }\n);\n\nexport default userReducer;\n"]},"metadata":{},"sourceType":"module"}